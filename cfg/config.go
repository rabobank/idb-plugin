package cfg

import (
    "fmt"
    "strconv"
    "strings"

    "code.cloudfoundry.org/cli/plugin"
)

const (
    ShowIdentityDetails = "show-identity-details"
)

var COMMANDS = []plugin.Command{
    {
        Name:     ShowIdentityDetails,
        Alias:    "sid",
        HelpText: "Show the details of the tokens generated by the identity issuer",
        UsageDetails: plugin.Usage{
            Usage: "\n" +
                "cf show-identity-details <SERVICE_INSTANCE> <JSON_OBJECT>" +
                "\n" +
                "  SERVICE_INSTANCE - Identity service instance name.\n",
        },
    },
}

var (
    Version  = "0.0.0"
    Commit   = "dev"
    Metadata plugin.PluginMetadata
)

func Initialize() {
    versionParts := strings.Split(Version, ".")
    var major, minor, build int
    var e error

    if strings.HasPrefix(versionParts[0], "v") {
        versionParts[0] = versionParts[0][1:]
    }

    major, e = strconv.Atoi(versionParts[0])
    if e != nil {
        fmt.Printf("invalid major version : %s. Defaulting to 0\n", versionParts[0])
        major = 0
    }

    if len(versionParts) > 1 {
        minor, e = strconv.Atoi(versionParts[1])
        if e != nil {
            fmt.Printf("invalid minor version : %s. Defaulting to 0\n", versionParts[1])
            minor = 0
        }
    }

    if len(versionParts) > 2 {
        if dashPosition := strings.Index(versionParts[2], "-"); dashPosition > 0 {
            versionParts[2] = versionParts[2][:dashPosition]
        }
        build, e = strconv.Atoi(versionParts[2])
        if e != nil {
            fmt.Printf("invalid build version : %s. Defaulting to 0\n", versionParts[2])
            build = 0
        }
    }

    Metadata = plugin.PluginMetadata{
        Name:          "idb-plugin",
        Version:       plugin.VersionType{Major: major, Minor: minor, Build: build},
        MinCliVersion: plugin.VersionType{Major: 7, Minor: 1, Build: 0},
        Commands:      COMMANDS,
    }
}
